name: SAP CAP CI/CD to Cloud Foundry

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-test:
    name: Build & Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20.x"
          cache: "npm"

      - name: Clean install dependencies (npm ci)
        run: |
          set -e
          npm ci

      - name: Validate CDS models
        run: |
          set -e
          npx cds compile srv --to csn

      - name: Run unit tests if present
        run: |
          set -e
          if node -e "const p=require('./package.json'); process.exit(p.scripts && p.scripts.test ? 0 : 1)"; then
            npm test
          else
            echo "No test script defined; skipping tests."
          fi

      - name: Build CDS artifacts
        run: |
          set -e
          if node -e "const p=require('./package.json'); process.exit(p.scripts && p.scripts.build ? 0 : 1)"; then
            npm run build
          else
            echo "No build script defined; running 'cds build --production' directly."
            npx cds build --production
          fi

      - name: Install MBT (Multi-Target Application Builder)
        run: |
          set -e
          npm i -g mbt
          mbt --version

      - name: Compute MTAR name
        id: meta
        run: |
          set -e
          REPO_SAFE="${GITHUB_REPOSITORY//\//-}"
          MTAR_NAME="${REPO_SAFE}-${GITHUB_SHA}.mtar"
          echo "mtar_name=${MTAR_NAME}" >> "$GITHUB_OUTPUT"

      - name: Build MTAR
        run: |
          set -e
          mbt build -p cf --mtar "${{ steps.meta.outputs.mtar_name }}"

      - name: Upload MTAR artifact
        uses: actions/upload-artifact@v4
        with:
          name: mtar
          path: ${{ steps.meta.outputs.mtar_name }}
          if-no-files-found: error
          retention-days: 7

  deploy:
    name: Deploy to Cloud Foundry
    runs-on: ubuntu-latest
    needs: build-test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - name: Download MTAR artifact
        uses: actions/download-artifact@v4
        with:
          name: mtar
          path: .

      - name: Compute MTAR name
        id: meta
        run: |
          set -e
          REPO_SAFE="${GITHUB_REPOSITORY//\//-}"
          MTAR_NAME="${REPO_SAFE}-${GITHUB_SHA}.mtar"
          echo "mtar_name=${MTAR_NAME}" >> "$GITHUB_OUTPUT"
          ls -l

      - name: Install Cloud Foundry CLI and MultiApps plugin
        run: |
          set -e
          sudo mkdir -p /usr/share/keyrings
          curl -fsSL https://packages.cloudfoundry.org/debian/cli.cloudfoundry.org.key | sudo gpg --dearmor -o /usr/share/keyrings/cloudfoundry.gpg
          echo "deb [signed-by=/usr/share/keyrings/cloudfoundry.gpg] https://packages.cloudfoundry.org/debian stable main" | sudo tee /etc/apt/sources.list.d/cloudfoundry-cli.list > /dev/null
          sudo apt-get update
          sudo apt-get install -y cf8-cli
          cf version
          cf add-plugin-repo CF-Community https://plugins.cloudfoundry.org
          cf install-plugin multiapps -f -r CF-Community
          cf plugins

      - name: Authenticate and target Cloud Foundry
        env:
          CF_API: ${{ secrets.CF_API }}
          CF_ORG: ${{ secrets.CF_ORG }}
          CF_SPACE: ${{ secrets.CF_SPACE }}
          CF_USERNAME: ${{ secrets.CF_USERNAME }}
          CF_PASSWORD: ${{ secrets.CF_PASSWORD }}
        run: |
          set -e
          cf api "$CF_API"
          cf login -u "$CF_USERNAME" -p "$CF_PASSWORD" -o "$CF_ORG" -s "$CF_SPACE"
          cf target

      - name: Deploy MTAR to Cloud Foundry
        run: |
          set -e
          cf deploy "${{ steps.meta.outputs.mtar_name }}"